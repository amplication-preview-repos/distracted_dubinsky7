/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Alarm as PrismaAlarm } from "@prisma/client";

export class AlarmServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.AlarmCountArgs, "select">): Promise<number> {
    return this.prisma.alarm.count(args);
  }

  async alarms(args: Prisma.AlarmFindManyArgs): Promise<PrismaAlarm[]> {
    return this.prisma.alarm.findMany(args);
  }
  async alarm(args: Prisma.AlarmFindUniqueArgs): Promise<PrismaAlarm | null> {
    return this.prisma.alarm.findUnique(args);
  }
  async createAlarm(args: Prisma.AlarmCreateArgs): Promise<PrismaAlarm> {
    return this.prisma.alarm.create(args);
  }
  async updateAlarm(args: Prisma.AlarmUpdateArgs): Promise<PrismaAlarm> {
    return this.prisma.alarm.update(args);
  }
  async deleteAlarm(args: Prisma.AlarmDeleteArgs): Promise<PrismaAlarm> {
    return this.prisma.alarm.delete(args);
  }
}
